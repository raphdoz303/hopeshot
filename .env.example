# =============================================================================
# FRONTEND DEVELOPMENT (NEW - v0.10.0)
# =============================================================================

# Frontend development configuration
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:8000

# Component testing and development
COMPONENT_DEBUG=true
MOCK_DATA_ENABLED=true

# =============================================================================
# CATEGORY SYSTEM (NEW - v0.10.0)
# =============================================================================

# Standardized 8-category system with visual identity
# Categories automatically migrated via migrate_categories.py
CATEGORY_SYSTEM=standardized
CATEGORY_COUNT=8

# Category API endpoint for frontend integration
CATEGORIES_ENDPOINT=/api/categories
CATEGORY_CACHE_TTL=3600

# =============================================================================
# NEWS API CONFIGURATION
# =============================================================================

# NewsAPI.org (1000 requests/day free tier)
# Sign up at: https://newsapi.org/
NEWS_API_KEY=your_newsapi_key_here

# NewsData.io (200 requests/day free tier, 10 articles max per request)  
# Sign up at: https://newsdata.io/
NEWSDATA_API_KEY=your_newsdata_key_here

# AFP (Agence France-Presse) - Professional news service
# Contact AFP sales for content subscription
AFP_CLIENT_ID=your_afp_client_id
AFP_CLIENT_SECRET=your_afp_client_secret  
AFP_USERNAME=your_afp_email@example.com
AFP_PASSWORD=your_afp_password

# =============================================================================
# AI/ML SERVICES CONFIGURATION
# =============================================================================

# Google Gemini API (Primary AI Analysis Service with A/B Testing)
# Sign up at: https://aistudio.google.com/app/apikey
# Free tier: 15 RPM, 1000 RPD, 250k TPM
# Used for multi-prompt A/B testing framework with geographic auto-creation
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# DATA STORAGE CONFIGURATION
# =============================================================================

# Google Sheets API for comparative A/B testing data logging
# Create service account at: https://console.cloud.google.com/
# Download credentials JSON file as gsheetapi_credentials.json
GOOGLE_SHEETS_CREDENTIALS=gsheetapi_credentials.json
GOOGLE_SHEETS_ID=your_google_sheets_id_here

# SQLite Database (Local file-based database)
# No configuration needed - database created automatically
# File location: backend/hopeshot_news.db
# View with DB Browser for SQLite or VS Code SQLite Viewer extension

# =============================================================================
# A/B TESTING CONFIGURATION
# =============================================================================

# Prompt configuration file for multi-prompt analysis
# File location: backend/prompts.yaml
# Enables systematic prompt optimization without code changes
PROMPTS_CONFIG_FILE=prompts.yaml

# Source configuration file for news source management
# File location: backend/sources.yaml
# Controls which sources are active and their daily limits
SOURCES_CONFIG_FILE=sources.yaml

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment setting
ENVIRONMENT=development

# Server URLs (for reference)
BACKEND_URL=http://localhost:8000
FRONTEND_URL=http://localhost:3000

# CORS configuration for frontend-backend communication
CORS_ORIGINS=http://localhost:3000

# API versioning
API_VERSION=0.10.0

# =============================================================================
# DATABASE FEATURES (v0.10.0)
# =============================================================================

# SQLite Database Features:
# - Normalized schema with 5 tables (articles, categories, locations, junction tables)
# - Auto-creation of categories and geographic hierarchies
# - Multi-location support via junction tables
# - Connection reuse pattern prevents database locks
# - Standardized 8-category system with visual identity

# Category Migration Features:
# - Database-driven category metadata with colors, emojis, filter names
# - Frontend API integration via /api/categories endpoint
# - Backward compatibility with existing article relationships

# =============================================================================
# FRONTEND INTEGRATION (v0.10.0)
# =============================================================================

# Development settings for frontend-backend integration
API_BASE_URL=http://localhost:8000/api
CATEGORIES_CACHE_ENABLED=true
MOCK_ARTICLES_COUNT=4

# Component development settings
COMPONENT_TESTING_ENABLED=true
DEBUG_API_CALLS=true

# UI/UX Configuration
DESIGN_SYSTEM=sky_growth
COLOR_PALETTE_VERSION=1.0
RESPONSIVE_BREAKPOINTS=mobile_tablet_desktop

# =============================================================================
# TAILWIND CSS CONFIGURATION (v0.10.0)
# =============================================================================

# Tailwind v4 uses CSS custom properties instead of config file
# Color system defined in frontend/src/app/globals.css
# No additional configuration needed for build process